int main()
{
	int x[3] = {1,2,3};
	int(*p1)[3] = &x; // 배열 주소
	int* p2 = x;      // 배열의 0번째 요소 주소

	int y[2][2] = {{1,2},{3,4}};

	int (*p3)[2][2] = &y; // 2차 배열의 주소
	int(*p4)[2] = y;	  // 배열의 0번째 요소의 주소
						  // => 2차 배열의 0번째 요소타입은 1차 배열입니다.
						// => 따라서 p4 는 1차 배열의 포인터가 되어야합니다.

	int z[2][2][2] = {1,2,3,4,5,6,7,8};
	int (*p5)[2][2][2] = &z; // 3차 배열의 주소
	int (*p6)[2][2] = z;

	foo(y, 2); // 2차 배열의 이름을 함수 인자로 전달
}
void foo( int (*p)[2], int n )
{
	p[0][0] = 10;
}

// &foo : 정확히 함수 주소 입니다. 
// foo  : 함수 이름 입니다.
//        그런데, function to pointer conversion 문법으로
//		  함수 이름이 함수 주소로 암시적 형변환 되고 있는 현상



