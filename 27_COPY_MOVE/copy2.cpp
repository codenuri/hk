#include <iostream>

// 왜 복사 생성자를 알아야 하나요 ?
// 컴파일러가 만들어주는 것을 그냥 사용하면 안되나요!!
// => 대부분의 경우 문제 없습니다.

// 그런데, 문제 되는 경우가 있습니다.
// => 아래 코드!
// => 클래스 안에 포인터 멤버가 있다면
// => 컴파일러가 제공하는 복사 생성자는 
// => 메모리 자체가 아닌 주소만 복사하는 얕은복사(shallow copy)
//    현상을 일으키게 됩니다.

// 해결책 : 사용자가 복사 생성자를 만들어야 합니다.
// => 그래서 메모리 자체를 복사해야 합니다(deep copy)

// 복습하실때 아래 코드 메모리 그림 그려 보세요
// => 컴파일러 제공 복사 생성자 동작 생각하면서 그리세요.
class vector 
{
	int* ptr;
	std::size_t sz;
public:
	vector(std::size_t size) : sz{size}
	{
		ptr = new int[sz];
	}
	~vector() { delete[] ptr; }
};
int main()
{
	vector v1{10};

	vector v2 = v1; 
			// => 복사생성자 호출
			// => 사용자가 만들지 않았으므로 컴파일러 제공버전 사용
			// => 
}